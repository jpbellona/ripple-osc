/**
 * Example sketch for working with ARS system.  True/False responses
 *
 * Takes answers generated by users and diplays a bouncing ball 
 * on the side of the screen associated with the answer (true or false).
 *
 * See the README for the syntax of incoming OSC messages. 
 *
 * @author jpbellona
 * @link   http://jpbellona.com 
 */
 
//OSC
import java.util.Iterator;
import java.util.Map;
import oscP5.*;
import netP5.*;
OscP5 oscP5;
NetAddress myRemoteLocation;

//example specific globals
HashMap responses = new HashMap();
Ball[] balls_true = new Ball[0]; // We start with an empty array.
Ball[] balls_false = new Ball[0];
float gravity = 0.1;
PFont font;
String current_question = "";
String[] current_questionObj = new String[3];

/*
 * setup our sketch
 */
void setup() {
  size(800,400);
  //input port
  oscP5 = new OscP5(this, 1234);
  //output port
  myRemoteLocation = new NetAddress("128.223.87.194",11500);
  
  font = loadFont("Didot-33.vlw");
  textFont(font);
  textAlign(CENTER);
  smooth();
  
}


void draw() {
  //split the screen
  background(0); 
  draw_sides();
  
  // Display the question
  fill(255);
  text(current_question, 10, 75, width-20, 200);
  
  // Update and display all balls ranked True
  if (balls_true.length > 0) {
    for (int i = 0; i < balls_true.length; i ++ ) { // Whatever the length of that array, update and display all of the objects.
      balls_true[i].move_onLeft();
      balls_true[i].display();
    }
  }
  // Update and display all balls ranked False
  if (balls_false.length > 0) {
    for (int i = 0; i < balls_false.length; i ++ ) {
      balls_false[i].move_onRight();
      balls_false[i].display();
    }
  }
}

/*
 * split the screen into two halves
 */
void draw_sides() {
  color g = color(88, 157, 42); //green
  color r = color(189, 55, 48); //red
  
  //left-side
  fill(g);
  stroke(g);
  rect(0,0,width/2,height);
  
  //right-side
  fill(r);
  stroke(r);
  rect(width/2,0,width,height);
  
  //reset the stroke
  stroke(0); 
}




/*
 * Generates a new Ball.
 *
 * Calling upon user response.
 */
void create_newBall(String response) {
  // A new ball object
  int initSpeed = 6;
  
  //true is on left, false is on right
  if (response.equals("True") == true) {
    Ball b = new Ball(int(random(width/2)),int(random(height)),random(initSpeed),random(initSpeed));
    balls_true = (Ball[]) append(balls_true,b);
  } else {
    Ball b = new Ball(int(random(width/2, width)),int(random(height)),random(initSpeed),random(initSpeed));
    balls_false = (Ball[]) append(balls_false,b);
  }
  
}


void mousePressed() {
 print_collected_responses();
}

/*
 * Iterate through our hashMap (user generated responses) and print
 */
void print_collected_responses() {
  Iterator i = responses.entrySet().iterator();  // Get an iterator

  while (i.hasNext()) {
    Map.Entry me = (Map.Entry)i.next();
    print(me.getKey() + " is ");
    println(me.getValue());
  } 
}
